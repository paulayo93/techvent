{"version":3,"sources":["./src/app/user/login.component.html","./src/app/user/profile.component.html","./src/app/user/login.component.ts","./src/app/user/profile.component.ts","./src/app/user/user.module.ts","./src/app/user/user.routes.ts"],"names":[],"mappings":"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","file":"user-user-module-es2015.js","sourcesContent":["export default \"<h1>Login</h1>\\r\\n<hr />\\r\\n<div class=\\\"col-md-4\\\">\\r\\n  <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm.value)\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"userName\\\">User Name:</label>\\r\\n      <em *ngIf=\\\"\\r\\n          loginForm.controls.userName?.invalid &&\\r\\n          (loginForm.controls.userName?.touched || mouseoverLogin)\\r\\n        \\\" novalidate>Required</em>\\r\\n      <input (ngModel)=\\\"username\\\" name=\\\"userName\\\" id=\\\"userName\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n        placeholder=\\\"User Name...\\\" required />\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"password\\\">Password:</label>\\r\\n      <em *ngIf=\\\"\\r\\n          loginForm.controls.password?.invalid &&\\r\\n          (loginForm.controls.password?.touched || mouseoverLogin)\\r\\n        \\\">Required</em>\\r\\n      <input class=\\\"form-control\\\"\\r\\n      (ngModel)=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" type=\\\"password\\\"  placeholder=\\\"Password...\\\"\\r\\n        required />\\r\\n    </div>\\r\\n    <span (mouseenter)=\\\"mouseoverLogin = true\\\" (mouseleave)=\\\"mouseoverLogin = false\\\">\\r\\n      <button type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\" class=\\\"btn btn-primary\\\">\\r\\n        Login\\r\\n      </button>\\r\\n    </span>\\r\\n    <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-default\\\">\\r\\n      Cancel\\r\\n    </button>\\r\\n  </form>\\r\\n  <br />\\r\\n  <br />\\r\\n  <div *ngIf=\\\"loginInvalid\\\" class=\\\"alert alert-danger\\\">Invalid Login Info</div>\\r\\n</div>\\r\\n\"","export default \"<div>\\r\\n    <h1>Edit Your Profile </h1>\\r\\n    <hr>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"saveProfile(profileForm.value)\\\" autocomplete=\\\"off\\\" novalidate>\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'error':!validateFirstName()}\\\">\\r\\n          <label for=\\\"firstName\\\">First Name:</label>\\r\\n          <em *ngIf=\\\"!validateFirstName() && \\r\\n          profileForm.controls.firstName.errors.required\\\">Required</em>\\r\\n          <em *ngIf=\\\"!validateFirstName() &&\\r\\n          profileForm.controls.firstName.errors.patterns\\\">Must start with a letter</em>\\r\\n          <input formControlName=\\\"firstName\\\" id=\\\"firstName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name...\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\"[ngClass]=\\\"{'error':!validateLastName()}\\\">\\r\\n          <label for=\\\"lastName\\\">Last Name:</label>\\r\\n          <em *ngIf=\\\"!validateLastName()\\\">Required</em>\\r\\n          <input formControlName=\\\"lastName\\\" id=\\\"lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name...\\\" />\\r\\n        </div>\\r\\n  \\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n        <button  (click)=\\\"cancel()\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\">Cancel</button>\\r\\n\\r\\n        <button  (click)=\\\"cancel()\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\"\\r\\n        style=\\\"float:right\\\" (click)=\\\"logout()\\\">Logout</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\"","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    templateUrl: './login.component.html',\r\n    styles: [`\r\n        em {float:right; color: #E05C65; padding-left: 10;}\r\n    `]\r\n})\r\nexport class LoginComponent {\r\n    username;\r\n    password;\r\n    mouseoverLogin;\r\n    loginInvalid = false;\r\n    constructor(private authService: AuthService,\r\n                private router: Router) {}\r\n\r\n    login(formValues) {\r\n        this.authService.loginUser(formValues.userName,\r\n            formValues.password).subscribe(resp => {\r\n                if (!resp) {\r\n                    this.loginInvalid = true;\r\n                } else {\r\n                    this.router.navigate(['events']);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    cancel() {\r\n        this.router.navigate(['events']);\r\n    }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormControl, FormGroup, Validator, Validators } from '@angular/forms';\r\n\r\nimport { AuthService} from './auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { TOASTR_TOKEN, Toastr } from '../common/toastr.service';\r\n\r\n\r\n@Component({\r\n  templateUrl: './profile.component.html',\r\n  styles: [`\r\n    em {float:right; color:#E05C65; padding-left: 10px;}\r\n    .error input {background-color:#E3C3C5;}\r\n    .error ::-webkit-input-placeholder {color: #999;}\r\n    .error ::-moz-placeholder { color: #999;}\r\n    .error ::-moz-placeholder {color: #999;}\r\n    .error ::-ms-input-placeholder {color: #999;}\r\n  `]\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  profileForm: FormGroup;\r\n  private firstName: FormControl;\r\n  private lastName: FormControl;\r\n\r\n       constructor(private authService: AuthService,\r\n                   private router: Router,\r\n                   @Inject(TOASTR_TOKEN) private toastr: Toastr) {}\r\n\r\n\r\n       ngOnInit() {\r\n         this.firstName = new FormControl(this.authService.currentUser.firstName,\r\n          [Validators.required, Validators.pattern('[a-zA-Z]')]);\r\n         this.lastName = new FormControl(this.authService.currentUser.lastName, Validators.required);\r\n         this.profileForm = new FormGroup({\r\n          firstName: this.firstName,\r\n          lastName: this.lastName\r\n         });\r\n       }\r\n\r\n       saveProfile(formValues) {\r\n         if (this.profileForm.valid) {\r\n          this.authService\r\n          .updateCurrentUser(formValues.firstName,\r\n            formValues.lastName)\r\n            .subscribe(() => {\r\n              this.toastr.success('Profile Saved ');\r\n            });\r\n\r\n\r\n        }\r\n      }\r\n\r\n      logout() {\r\n        this.authService.logout()\r\n        .subscribe(() => {\r\n          this.router.navigate(['/user/login']);\r\n        });\r\n      }\r\n\r\n      validateLastName() {\r\n\r\n        return this.lastName.valid || this.lastName.untouched;\r\n      }\r\n      validateFirstName() {\r\n\r\n        return this.firstName.valid || this.firstName.untouched;\r\n      }\r\n\r\n       cancel() {\r\n         this.router.navigate(['events']);\r\n       }\r\n}\r\n","import  { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ProfileComponent } from './profile.component';\r\nimport { userRoutes } from './user.routes';\r\nimport { LoginComponent } from './login.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n      CommonModule,\r\n      ReactiveFormsModule,\r\n      FormsModule,\r\n    RouterModule.forChild(userRoutes)\r\n  ],\r\n  declarations: [\r\n    ProfileComponent,\r\n    LoginComponent\r\n  ]\r\n})\r\nexport class UserModule {}\r\n","import { ProfileComponent } from './profile.component';\r\nimport { Routes } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const userRoutes: Routes = [\r\n    {path: 'profile', component: ProfileComponent},\r\n    {path: 'login', component: LoginComponent}\r\n];\r\n"],"sourceRoot":"webpack:///"}